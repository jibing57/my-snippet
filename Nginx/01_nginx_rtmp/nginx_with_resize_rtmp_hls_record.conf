user  nobody;
worker_processes  auto;

error_log  /var/log/nginx/error.log  notice;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /usr/local/nginx/;
            add_header Cache-Control no-cache; # Prevent caching of HLS fragments
            add_header Access-Control-Allow-Origin *; # Allow web player to access our playlist
        }
        # This URL provides RTMP statistics in XML
        location /stat {
            rtmp_stat all;

            # Use this stylesheet to view XML as web page
            # in browser
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            # XML stylesheet to view RTMP stats.
            # Copy stat.xsl wherever you want
            # and put the full directory path here
            root html;
        }
    }
}

rtmp_auto_push on;

rtmp {
    server {
        listen 1935;
        notify_method get;
        access_log  /var/log/nginx/access.log;
        chunk_size 4096;

        application live {
            # 开启直播模式
            live on;

            # 允许从任何源push流
            allow publish all;
            # 允许从任何地方来播放流
            #allow play all;
            # 20秒内没有push，就断开链接。
            drop_idle_publisher 20s;
            # 只允许本地播放流
            allow play 127.0.0.1;
            deny play all;

            # 保存源视频
            record all;
            record_path /tmp/streaming_temp;

            # 开启HLS
            #hls on; # Enable HTTP Live Streaming
            # Pointing this to an SSD is better as this involves lots of IO
            # 设置hls存放目录
            #hls_path /usr/local/nginx/hls/;

            exec /usr/bin/ffmpeg -i rtmp://localhost/$app/$name -async 1 -vsync -1
            -c:v libx264 -c:a aac -b:v 256k -b:a 128k -ac 2 -vf "scale=480:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/vod/$name_low
            -c:v libx264 -c:a aac -b:v 768k -b:a 128k -ac 2 -vf "scale=720:trunc\(ow/a/2\)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/vod/$name_mid
            -c:v libx264 -c:a aac -b:v 1024k -b:a 128k -ac 2 -vf "scale=960:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/vod/$name_high
            -c:v libx264 -c:a aac -b:v 1920k -b:a 128k -ac 2 -vf "scale=1280:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/vod/$name_hd720
            -c copy -f flv rtmp://localhost/vod/$name_src;


        }
        application vod {
            live on; # Allows live input from above
            hls on; # Enable HTTP Live Streaming

            # Pointing this to an SSD is better as this involves lots of IO
            hls_path /usr/local/nginx/hls/;
        }
    }
}
